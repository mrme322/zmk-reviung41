#undef ZMK_BEHAVIORS_KEEP_ALL

#define ZMK_BEHAVIORS_KEEP_SK
#define ZMK_BEHAVIORS_KEEP_MT
#define ZMK_BEHAVIORS_KEEP_KT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&sk {
    quick-release;
    release-after-ms = <600>;
};

/ {
    combos {
        compatible = "zmk,combos";

        shiftSK {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <37 39>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        delL {
            bindings = <&kp DELETE>;
            key-positions = <4 3>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
            layers = <0 1 3 2>;
        };

        delR {
            bindings = <&kp DELETE>;
            key-positions = <7 8>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
            layers = <0 1 3 2>;
        };

        BSL {
            bindings = <&kp BACKSPACE>;
            key-positions = <15 16>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
            layers = <0 1 3 2>;
        };

        BSR {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
            layers = <0 1 3 2>;
        };

        ctrl+BS {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <28 27>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <3 2>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <8 9>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        question {
            bindings = <&kp QUESTION>;
            key-positions = <32 33>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        adj {
            bindings = <&mo 5>;
            key-positions = <1 5>;
            timeout-ms = <200>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "hmr";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;             // delay positional check until key-release
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "hml";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
            hold-trigger-on-release;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
        };

        shiftSKShift: shiftSKShift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "SHIFTSKSHIFT";
            tapping-term-ms = <50>;
            quick-tap-ms = <(-1)>;
            bindings = <&kp>, <&sk>;

            flavor = "tap-preferred";
        };

        skShift_Molayer: skShift_Molayer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "SKSHIFT_MOLAYER";
            tapping-term-ms = <100>;
            quick-tap-ms = <(-1)>;
            retro-tap;
            flavor = "tap-unless-interrupted";
            bindings = <&mo>, <&sk>;
        };

        spaceWinIpad: spaceWinIpad {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACEWINIPAD";
            #binding-cells = <0>;
            bindings = <&lt 1 SPACE>, <&lt 0 SPACE>;
        };
    };

    macros {
        ipadBT: ipadBT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &to 0>;
            label = "IPADBT";
        };

        windowsBT: windowsBT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 0>;
            label = "WINDOWSBT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        L0 {
            bindings = <
&none  &kp Q            &kp W            &kp E                &kp R              &kp T               &kp Y  &kp U              &kp I                 &kp O            &kp P               &none
&none  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G               &kp H  &hmr LEFT_SHIFT J  &hmr LEFT_CONTROL K   &hmr LEFT_ALT L  &hmr LEFT_GUI SEMI  &none
&none  &kp Z            &kp X            &kp C                &kp V              &kp B               &kp N  &kp M              &kp COMMA             &kp DOT          &kp FSLH            &none
                                         &kp LGUI             &lt 4 TAB                 &lt 1 SPACE         &lt 2 ENTER        &lt 3 K_CONTEXT_MENU
            >;
        };

        num-winSC {
            bindings = <
&none  &none         &none     &none      &none      &none         &kp PLUS   &kp N7     &kp N8              &kp N9  &kp STAR   &none
&none  &kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none         &kp MINUS  &kp N4     &kp N5              &kp N6  &kp SLASH  &none
&none  &none         &none     &none      &none      &none         &kp N0     &kp N1     &kp N2              &kp N3  &kp EQUAL  &none
                               &kp LGUI   &kp TAB           &none             &kp ENTER  &kp K_CONTEXT_MENU
            >;
        };

        nav-media {
            bindings = <
&none  &none         &none     &none      &none      &none             &kp C_VOL_UP  &kp PG_UP   &kp UP              &kp PG_DN   &kp C_MUTE  &none
&none  &kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none             &kp HOME      &kp LEFT    &kp DOWN            &kp RIGHT   &kp END     &none
&none  &none         &none     &none      &none      &none             &kp C_VOL_DN  &kp C_PREV  &kp C_PLAY          &kp C_NEXT  &kp RCTRL   &none
                               &kp LGUI   &kp TAB           &kp SPACE                &none       &kp K_CONTEXT_MENU
            >;
        };

        sym {
            bindings = <
&none  &kp EXCL      &kp AT    &kp HASH       &kp DLLR     &none             &kp PLUS   &kp GRAVE  &kp LPAR  &kp RPAR  &kp STAR   &none
&none  &kp LEFT_GUI  &kp LALT  &kp LCTRL      &kp LSHFT    &none             &kp MINUS  &kp TILDE  &kp LBKT  &kp RBKT  &kp SLASH  &none
&none  &kp CARET     &kp AMPS  &kp BACKSLASH  &kp PERCENT  &none             &kp PIPE   &kp UNDER  &kp LBRC  &kp RBRC  &kp EQUAL  &none
                               &kp LGUI       &kp TAB             &kp SPACE             &kp ENTER  &none
            >;
        };

        fn {
            bindings = <
&none  &kp F1  &kp F2   &kp F3    &kp F4   &none             &none  &none      &none               &none     &none         &none
&none  &kp F5  &kp F6   &kp F7    &kp F8   &none             &none  &kp LSHFT  &kp LCTRL           &kp LALT  &kp LEFT_GUI  &none
&none  &kp F9  &kp F10  &kp F11   &kp F12  &none             &none  &none      &none               &none     &none         &none
                        &kp LGUI  &none           &kp SPACE         &kp ENTER  &kp K_CONTEXT_MENU
            >;
        };

        adj {
            bindings = <
&none  &none  &none  &none           &none  &none               &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none  &none  &none           &none  &none               &none         &none         &none         &none         &bt BT_CLR    &none
&none  &none  &none  &none           &none  &none               &none         &none         &none         &none         &none         &none
                     &studio_unlock  &none         &bootloader                &none         &out OUT_TOG
            >;
        };
    };
};
